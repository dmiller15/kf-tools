version: 2.1
orbs:
  docker: circleci/docker@1.3.0
commands:
  run_if_modified:
    description: Run steps if files are modified
    parameters:
      always-run-on-branch:
        default: ""
        description: The branch to always run the steps on
        type: string
      base-branch:
        default: master
        description: The branch against which to check against. This can also be a
          commit SHA
        type: string
      check-last-commit-on-base-branch:
        default: false
        description: |
          This will make the check run for the latest commit on the base branch.
        type: boolean
      pattern:
        default: .*
        description: |
          The regex to match files against. The command uses grep to search file names.
          If you want to enforce starting with use ^. For checking if files in src/ or lib/ were modified,
          the pattern to use would be ^src.*|^lib.*
        type: string
      steps-to-run:
        default: []
        description: The steps to run if the files mentioned are modified
        type: steps
      use-divergence-point:
        default: false
        description: Find the divergence from the branch passed above, rather than
          the current HEAD
        type: boolean
    steps:
    - run:
        command: |
          if [ -z "$BASH" ]; then
            echo Bash not installed.
            exit 1
          fi
          git status >/dev/null 2>&1 || { echo >&2 "Not in a git directory or no git"; exit 1; }
          circleci-agent >/dev/null 2>&1 || { echo >&2 "No Circle CI agent. These are in all Circle CI containers"; exit 1; }

          if [ "$CIRCLE_BRANCH" == "<< parameters.always-run-on-branch >>" ]; then
            echo "Should always run on << parameters.always-run-on-branch >>. Exiting and continuing to run"
            exit 0;
          fi

          FILES_MODIFIED=""
          setcommit () {
            FILES_MODIFIED=$(git diff --name-only origin/<< parameters.base-branch >>..HEAD | grep -i -E '<< parameters.pattern >>')
            <<# parameters.use-divergence-point >>
            FILES_MODIFIED=$(git diff --name-only $(git merge-base HEAD origin/<< parameters.base-branch >>)..HEAD | grep -i -E '<< parameters.pattern >>')
            <</ parameters.use-divergence-point >>
            <<# parameters.check-last-commit-on-base-branch >>
            if [[ "$CIRCLE_BRANCH" == "<< parameters.base-branch >>" ]]; then
              FILES_MODIFIED=$(git diff --name-only HEAD HEAD~1 | grep -i -E '<< parameters.pattern >>')
            fi
            <</ parameters.check-last-commit-on-base-branch >>
          }

          setcommit || true
          if [ -z "$FILES_MODIFIED" ]
          then
            echo "Files not modified. Halting job"
            circleci-agent step halt
          else
            echo "Files modified, continuing steps"
          fi
        name: Swissknife - Run if modified
    - steps: << parameters.steps-to-run >>
jobs:
  samtools_latest_diff:
    steps:
    - run_if_modified:
        pattern: samtools/latest/Dockerfile
        steps-to-run:
        - docker/publish:
            name: build_samtools_latest
            deploy: false
            image: kfdrc/samtools
            tag: latest
            path: samtools/latest/
            docker-context: samtools/latest/
workflows:
  monthly:
#    triggers:
#    - schedule:
#        cron: '* * 1 * *'
#        filters:
#          branches:
#            only:
#            - master
    jobs:
    - docker/publish:
        name: build_samtools_1.7-11-g041220d
        deploy: false
        image: kfdrc/samtools
        tag: 1.7-11-g041220d
        path: samtools/1.7-11-g041220d/
        docker-context: samtools/1.7-11-g041220d/
    - docker/publish:
        name: build_samtools_1.9
        deploy: false
        image: kfdrc/samtools
        tag: '1.9'
        path: samtools/1.9/
        docker-context: samtools/1.9/
    - docker/publish:
        name: build_samtools_1.6
        deploy: false
        image: kfdrc/samtools
        tag: '1.6'
        path: samtools/1.6/
        docker-context: samtools/1.6/
    - docker/publish:
        name: build_samtools_1.3.1
        deploy: false
        image: kfdrc/samtools
        tag: 1.3.1
        path: samtools/1.3.1/
        docker-context: samtools/1.3.1/
    - docker/publish:
        name: build_samtools_latest
        deploy: false
        image: kfdrc/samtools
        tag: latest
        path: samtools/latest/
        docker-context: samtools/latest/
  diff:
    jobs:
      - samtools_latest_diff
