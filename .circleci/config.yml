version: 2.1
orbs:
  docker: circleci/docker@1.3.0
commands:
  run_if_modified:
    description: Run steps if files are modified
    parameters:
      always-run-on-branch:
        default: ''
        description: The branch to always run the steps on
        type: string
      base-branch:
        default: master
        description: The branch against which to check against. This can also be a
          commit SHA
        type: string
      check-last-commit-on-base-branch:
        default: false
        description: "This will make the check run for the latest commit on the base\
          \ branch.\n"
        type: boolean
      pattern:
        default: .*
        description: "The regex to match files against. The command uses grep to search\
          \ file names.\nIf you want to enforce starting with use ^. For checking\
          \ if files in src/ or lib/ were modified,\nthe pattern to use would be ^src.*|^lib.*\n"
        type: string
      steps-to-run:
        default: []
        description: The steps to run if the files mentioned are modified
        type: steps
      use-divergence-point:
        default: false
        description: Find the divergence from the branch passed above, rather than
          the current HEAD
        type: boolean
    steps:
    - run:
        command: "if [ -z \"$BASH\" ]; then\n  echo Bash not installed.\n  exit 1\n\
          fi\ngit status >/dev/null 2>&1 || { echo >&2 \"Not in a git directory or\
          \ no git\"; exit 1; }\ncircleci-agent >/dev/null 2>&1 || { echo >&2 \"No\
          \ Circle CI agent. These are in all Circle CI containers\"; exit 1; }\n\n\
          if [ \"$CIRCLE_BRANCH\" == \"<< parameters.always-run-on-branch >>\" ];\
          \ then\n  echo \"Should always run on << parameters.always-run-on-branch\
          \ >>. Exiting and continuing to run\"\n  exit 0;\nfi\n\nFILES_MODIFIED=\"\
          \"\nsetcommit () {\n  FILES_MODIFIED=$(git diff --name-only origin/<< parameters.base-branch\
          \ >>..HEAD | grep -i -E '<< parameters.pattern >>')\n  <<# parameters.use-divergence-point\
          \ >>\n  FILES_MODIFIED=$(git diff --name-only $(git merge-base HEAD origin/<<\
          \ parameters.base-branch >>)..HEAD | grep -i -E '<< parameters.pattern >>')\n\
          \  <</ parameters.use-divergence-point >>\n  <<# parameters.check-last-commit-on-base-branch\
          \ >>\n  if [[ \"$CIRCLE_BRANCH\" == \"<< parameters.base-branch >>\" ]];\
          \ then\n    FILES_MODIFIED=$(git diff --name-only HEAD HEAD~1 | grep -i\
          \ -E '<< parameters.pattern >>')\n  fi\n  <</ parameters.check-last-commit-on-base-branch\
          \ >>\n}\n\nsetcommit || true\nif [ -z \"$FILES_MODIFIED\" ]\nthen\n  echo\
          \ \"Files not modified. Halting job\"\n  circleci-agent step halt\nelse\n\
          \  echo \"Files modified, continuing steps\"\nfi\n"
        name: Swissknife - Run if modified
    - steps: << parameters.steps-to-run >>
jobs:
  samtools_1711g041220d_diff:
    executor: docker/docker
    steps:
    - checkout
    - run_if_modified:
        pattern: samtools/latest/Dockerfile
        steps-to-run:
        - docker/build:
            image: kfdrc/samtools
            tag: latest
            path: samtools/latest/
            docker-context: samtools/latest/
  samtools_19_diff:
    executor: docker/docker
    steps:
    - checkout
    - run_if_modified:
        pattern: samtools/latest/Dockerfile
        steps-to-run:
        - docker/build:
            image: kfdrc/samtools
            tag: latest
            path: samtools/latest/
            docker-context: samtools/latest/
  samtools_16_diff:
    executor: docker/docker
    steps:
    - checkout
    - run_if_modified:
        pattern: samtools/latest/Dockerfile
        steps-to-run:
        - docker/build:
            image: kfdrc/samtools
            tag: latest
            path: samtools/latest/
            docker-context: samtools/latest/
  samtools_131_diff:
    executor: docker/docker
    steps:
    - checkout
    - run_if_modified:
        pattern: samtools/latest/Dockerfile
        steps-to-run:
        - docker/build:
            image: kfdrc/samtools
            tag: latest
            path: samtools/latest/
            docker-context: samtools/latest/
  samtools_latest_diff:
    executor: docker/docker
    steps:
    - checkout
    - run_if_modified:
        pattern: samtools/latest/Dockerfile
        steps-to-run:
        - docker/build:
            image: kfdrc/samtools
            tag: latest
            path: samtools/latest/
            docker-context: samtools/latest/
workflows:
  monthly:
    triggers:
    - schedule:
        cron: '* * 1 * *'
        filters:
          branches:
            only:
            - master
    jobs:
    - docker/publish:
        name: build_samtools_1.7-11-g041220d
        deploy: false
        image: kfdrc/samtools
        tag: 1.7-11-g041220d
        path: samtools/1.7-11-g041220d/
        docker-context: samtools/1.7-11-g041220d/
    - docker/publish:
        name: build_samtools_1.9
        deploy: false
        image: kfdrc/samtools
        tag: '1.9'
        path: samtools/1.9/
        docker-context: samtools/1.9/
    - docker/publish:
        name: build_samtools_1.6
        deploy: false
        image: kfdrc/samtools
        tag: '1.6'
        path: samtools/1.6/
        docker-context: samtools/1.6/
    - docker/publish:
        name: build_samtools_1.3.1
        deploy: false
        image: kfdrc/samtools
        tag: 1.3.1
        path: samtools/1.3.1/
        docker-context: samtools/1.3.1/
    - docker/publish:
        name: build_samtools_latest
        deploy: false
        image: kfdrc/samtools
        tag: latest
        path: samtools/latest/
        docker-context: samtools/latest/
  diff:
    jobs:
    - samtools_1711g041220d_diff
    - samtools_19_diff
    - samtools_16_diff
    - samtools_131_diff
    - samtools_latest_diff
